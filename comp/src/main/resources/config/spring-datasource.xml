<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 配置属性文件方法1 <context:property-placeholder location="classpath:conf/jdbc.properties"/> -->
	<!-- 配置属性文件方法2 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath*:/config/jdbc.properties</value>
		</property>
	</bean>
	<!-- 阿里巴巴数据源  Oracle-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 驱动名称 -->
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" /> -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- <property name="driverClassName" value="${jdbc.driverClassName}" /> -->
		<!-- JDBC连接串 -->
		<!-- <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:ORCL" /> -->
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/tianling" />
		<!-- <property name="url" value="${jdbc.url}" /> -->
		<!-- 数据库用户名称 -->
		<property name="username" value="root" />
		<!-- <property name="username" value="${jdbc.username}" /> -->
		<!-- 数据库密码 -->
		<property name="password" value="tianling" />
		<!-- <property name="password" value="${jdbc.password}" /> -->
		<property name="connectionProperties" value="config.decrypt=true" />
		<!-- <property name="connectionProperties" value="${jdbc.connectionProperties}" /> -->
		<property name="filters" value="wall" />
		<!-- <property name="filters" value="${jdbc.filters}" /> -->
		<!-- 初始化大小 -->
		<property name="initialSize" value="30" />
		<!-- <property name="initialSize" value="${jdbc.initialSize}" /> -->
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="150" />
		<!-- <property name="maxActive" value="${jdbc.maxActive}" /> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="10" />
		<!-- <property name="minIdle" value="${jdbc.minIdle}" /> -->
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="6000" />
		<!-- <property name="maxWait" value="${jdbc.maxWait}" /> -->
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="6000" />
		<!-- <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" /> -->
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" /> -->
		<!-- 测试有效用的SQL Query -->
		<!-- <property name="validationQuery" value="${jdbc.validationQuery}" /> -->
		<!-- 连接空闲时测试是否有效 -->
		<property name="testWhileIdle" value="false" />
		<!-- <property name="testWhileIdle" value="${jdbc.testWhileIdle}" /> -->
		<!-- 获取连接时测试是否有效 -->
		<property name="testOnBorrow" value="false" />
		<!-- <property name="testOnBorrow" value="${jdbc.testOnBorrow}" /> -->
		<!-- 归还连接时是否测试有效 -->
		<property name="testOnReturn" value="false" />
		<!-- <property name="testOnReturn" value="${jdbc.testOnReturn}" /> -->
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" /> 
		<!-- <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" /> -->
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" /> -->
	</bean>
	<!-- 配置阿里巴巴druid监控spring jdbc -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />
 
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.comp.service.*</value>
                <value>com.comp.dao.*</value>
            </list>
        </property>
    </bean>
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>
</beans>