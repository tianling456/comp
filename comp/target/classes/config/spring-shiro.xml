<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- web.xml中shiro的filter对应的bean -->
	<!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证-->
		<property name="loginUrl" value="/user/login.com" />
		<!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径-->
		<property name="successUrl" value="/index.com" />
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
		<property name="unauthorizedUrl" value="/user/refuse.jsp" />
		<!-- 自定义filter配置-->
		<property name="filters">
			<map>
				<!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中-->
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property>
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边-->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问-->
				<!-- 验证码，可匿名访问-->
				<!-- /validatecode.jsp = anon -->
				<!-- 请求 logout.com地址，shiro去清除session-->
				<!-- /logout.com = logout -->
				<!-- 商品查询需要权限 ，取消url拦截配置，使用注解授权方式-->
				<!-- /items/queryItems.com = perms[item:query] /items/editItems.com 
					= perms[item:edit] -->
				<!-- 配置记住我或认证通过可以访问的地址-->
				<!-- /index.jsp = user
				/first.com = user -->
				<!-- /welcome.jsp = user -->
				<!-- /** = authc --> <!-- 所有url都必须认证通过才可以访问-->
				<!-- /** = authc -->
				<!-- /** = anon  -->  <!-- 所有url都可以匿名访问-->
				<!-- 退出的地址 -->
				/logout.com = logout
				/user/register.com=anon
				/images/**=anon
				/javascript/**=anon
				/styles/**=anon
				/fonts/**=anon
				<!-- /kaptcha.jpg=anon -->
				/** = authc
			</value>
		</property>
	</bean>

	<!-- securityManager安全管理器-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
		<!-- 注入缓存管理器-->
		<property name="cacheManager" ref="cacheManager" />
		<!-- 注入session管理器-->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 记住我-->
		<property name="rememberMeManager" ref="rememberMeManager" />

	</bean>

	<!-- realm-->
	<bean id="customRealm" class="com.comp.shiro.CustomRealm">
		<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列-->
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>

	<!-- 凭证匹配器-->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
	</bean>

	<!-- 缓存管理器-->
	<!-- 要确保缓存管理器只能有一个！在shiro1.3以后，要确保缓存管理器是单例的。所以需要这样配 -->
	<!-- MyBatis使用ehcache缓存 start -->
	<!-- <bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:config/shiroEhcache.xml" />
                <property name="shared" value="true"></property>
	</bean>
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean> -->
	
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>

	<!-- 会话管理器-->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session的失效时长，单位毫秒-->
		<property name="globalSessionTimeout" value="600000" />
		<!-- 删除失效的session-->
		<property name="deleteInvalidSessions" value="true" />
	</bean>

	<!-- 自定义form认证过虑器-->
	<!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置-->
	<bean id="formAuthenticationFilter" class="com.comp.shiro.CustomFormAuthenticationFilter ">
		<!-- 表单中账号的input名称-->
		<property name="usernameParam" value="username" />
		<!-- 表单中密码的input名称-->
		<property name="passwordParam" value="password" />
		<!-- 记住我input的名称-->
		<property name="rememberMeParam" value="rememberMe" />
	</bean>

	<!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息-->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 记住我cookie-->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字-->
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天-->
		<property name="maxAge" value="2592000" />
	</bean>
</beans> 